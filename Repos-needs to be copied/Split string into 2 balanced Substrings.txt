//Rextester.Program.Main is the entry point for your code. Don't change it.
//Microsoft (R) Visual C# Compiler version 2.9.0.63208 (958f2354)

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text.RegularExpressions;
using System.Collections;

namespace Rextester {
  public class Program {
    static int distinctChars(string s) {
      // Frequency of each character
      int[] freq = new int[26];
      int count = 0;

      // Loop to count the frequency
      // of each character of the String
      for (int i = 0; i < s.Length; i++)
        freq[s[i] - 'a']++;

      for (int i = 0; i < 26; i++) {
        Console.WriteLine(freq[i]);

      }

      // If frequency is greater than 0
      // then the character occured
      for (int i = 0; i < 26; i++) {
        if (freq[i] > 0)
          count++;
      }

      return count;
    }

    public static bool isBalanced(String input) {

      char[] array = input.ToArray();
      Array.Sort(array);

      //Stack<int> myStack = new Stack<int>();
      Stack < char > st = new Stack < char > ();

      foreach(char chr in array) {
        switch (chr) {

        case '{':
        case '(':
        case '[':
          st.Push(chr);
          break;

        case ']':
          if (st.Count == 0 || st.Pop() != '[')
            return false;
          break;
        case ')':
          if (st.Count == 0 || st.Pop() != '(')
            return false;
          break;
        case '}':
          if (st.Count == 0 || st.Pop() != '{')
            return false;
          break;
        }
      }
      return st.Count == 0; //st.isEmpty();
    }

    public static bool isBalanced2(String input) {

      //Console.WriteLine(input);

      //char []array=input.ToArray();
      //Array.Sort(array);

      int brackets = 0;
      int squareBrackets = 0;
      int questionMark = 0;

      foreach(char chr in array) {

        switch (chr) {
        case '?':

          questionMark++;

          break;

        case '(':

          brackets++;

          break;

        case ')':

          brackets--;

          break;

        case '[':

          squareBrackets++;

          break;

        case ']':

          squareBrackets--;

          break;

        default:

          break;
        }
      }

      Console.WriteLine(questionMark);
      Console.WriteLine(Math.Abs(brackets));
      Console.WriteLine(Math.Abs(squareBrackets));
      if (brackets == 0 && squareBrackets == 0 && (questionMark == 0 | (questionMark % 2) == 0)) {
        return true;
      } else if (Math.Abs(brackets) + Math.Abs(squareBrackets) == questionMark) {
        return true;

      } else {
        return false;
      }
      //return brackets == 0 && squareBrackets==0 && curlyBrackets==0 && (questionMark==0 | (questionMark % 2)==0) ;
    }

    static int waysToSplit(string s) {
      int n = s.Length;
      int answer = 0;
      // to construct at least 2 balanced substring string, the input has to be minumum of 4 characters length
      // and also the input must have even number of characters to split into 2 balanced substrings
      if (n < 4 | n % 2 != 0) {
        return 0;
      }

      // Loop to choose the partition
      // index for the String
      for (int i = 2; i < n; i++) {

        // Divide in two parts
        string left = s.Substring(0, i);
        string right = s.Substring(i, n - i);
        //Console.WriteLine("Left String: " + left);
        //Console.WriteLine("RIght String: " + right);

        // Check whether the Left and Right subsrings are balanced                           

        if (isBalanced2(left) && isBalanced2(right)) {
          answer++;
        }
        i++; //increment twuice to get even number if characters in the substring
      }
      return answer;
    }

    public static void Main(string[] args) {
      string s = "?[])({}??()))";
      string s1 = "bcadfnk";
      char[] charArray = s.ToCharArray();
      Array.Sort(charArray);
      //Console.WriteLine(String.Join("",charArray));
      //Console.WriteLine(s.IndexOf(')'));
      //int num ='z'-'a';
      //Console.WriteLine(Math.Abs(2-5));
      //Console.WriteLine(2%2);
      // Console.WriteLine(4%2);
      //string s="aba";
      //Console.WriteLine(num);
      //Your code goes here
      //Console.WriteLine(distinctChars("abcda"));
      //Console.WriteLine(isBalanced("[])({}()"));
      //Console.WriteLine(isBalanced2("[])(?)?"));
      // Console.WriteLine(waysToSplit("[(?][??["));
      Console.WriteLine(waysToSplit("[]()?"));
    }
  }
}